package main

import (
   "154.pages.dev/protobuf"
   "bytes"
   "io"
   "net/http"
   "net/url"
   "os"
)

func main() {
   var req http.Request
   req.Header = http.Header{}
   req.Header["Connection"] = []string{"Keep-Alive"}
   req.Header["Content-Type"] = []string{"application/x-protobuf"}
   req.Header["Host"] = []string{"deviceintegritytokens-pa.googleapis.com"}
   req.Header["User-Agent"] = []string{"GmsCore/220920022 (generic_x86 PSR1.180720.012); gzip"}
   req.Method = "POST"
   req.ProtoMajor = 1
   req.ProtoMinor = 1
   req.URL = &url.URL{}
   req.URL.Host = "deviceintegritytokens-pa.googleapis.com"
   req.URL.Path = "/v1/getPoIntegrityToken"
   value := url.Values{}
   value["alt"] = []string{"proto"}
   value["key"] = []string{"AIzaSyBtL0AK6Hzgr69rQyeyhi-V1lmtsPGZd1M", "AIzaSyBtL0AK6Hzgr69rQyeyhi-V1lmtsPGZd1M"}
   req.URL.RawQuery = value.Encode()
   req.URL.Scheme = "https"
   req.Body = io.NopCloser(bytes.NewReader(body.Marshal()))
   resp, err := http.DefaultClient.Do(&req)
   if err != nil {
      panic(err)
   }
   defer resp.Body.Close()
   resp.Write(os.Stdout)
}

var body = protobuf.Message{
1: {protobuf.Varint(1)},
2: {protobuf.Bytes("")},
3: {protobuf.Bytes("\xe4\x1c\xee\xb3+\fR\xe7\xe8\xcfm!\x19\xee\x01o!$[Q;wB\x16\\F\x18\x82\x89\x1c\xee\xf2")},
}
